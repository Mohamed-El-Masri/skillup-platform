{
  "openapi": "3.0.1",
  "info": {
    "title": "SkillUp Platform API",
    "description": "Smart Career Training Platform for Students and Graduates - Role-Based Endpoints",
    "version": "v1"
  },
  "paths": {
    "/api/v1/AIAssistant/chat": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - AI Assistant"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatWithAssistantCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatWithAssistantCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChatWithAssistantCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/AIAssistant/analyze-skills": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - AI Assistant"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyzeSkillsCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyzeSkillsCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyzeSkillsCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/AIAssistant/recommend-career": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - AI Assistant"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommendCareerCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommendCareerCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RecommendCareerCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/AIAssistant/generate-cv": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - AI Assistant"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCVCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCVCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCVCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/AIAssistant/user/{userId}/progress": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - AI Assistant"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Assessments": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Assessments"
        ],
        "summary": "Get all assessments",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "learningPathId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Assessments"
        ],
        "summary": "Create new assessment (Content Creator only)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssessmentCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssessmentCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssessmentCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Assessments/{id}": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Assessments"
        ],
        "summary": "Get assessment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "üë®‚Äçüéì Student - Assessments"
        ],
        "summary": "Update assessment (Content Creator only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssessmentCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssessmentCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssessmentCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "üë®‚Äçüéì Student - Assessments"
        ],
        "summary": "Delete assessment (Content Creator only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Assessments/{id}/submit": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Assessments"
        ],
        "summary": "Submit assessment (Student only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitAssessmentCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitAssessmentCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitAssessmentCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Assessments/{id}/results": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Assessments"
        ],
        "summary": "Get assessment results",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Assessments/{id}/start": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Assessments"
        ],
        "summary": "Start assessment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Assessments/{id}/questions": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Assessments"
        ],
        "summary": "Get assessment questions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Assessments/my-assessments": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Assessments"
        ],
        "summary": "Get user's assessment history",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Auth/register": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Authentication & Profile"
        ],
        "summary": "Register a new user account",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User registration data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResultResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResultResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResultResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid registration data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/login": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Authentication & Profile"
        ],
        "summary": "Login with email and password",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Login credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResultResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResultResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResultResult"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "403": {
            "description": "Account not verified or suspended",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/refresh": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Authentication & Profile"
        ],
        "summary": "Refresh JWT token",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Refresh token data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResultResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResultResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResultResult"
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/forgot-password": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Authentication & Profile"
        ],
        "summary": "Request password reset email",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Email address for password reset",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent (always returns 200 for security)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email format",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/reset-password": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Authentication & Profile"
        ],
        "summary": "Reset password using reset token",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Reset token and new password",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired reset token",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/verify-email": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Authentication & Profile"
        ],
        "summary": "Verify email address",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Email verification token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verified successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired verification token",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/resend-verification": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Authentication & Profile"
        ],
        "summary": "Resend email verification",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Email address to resend verification",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendVerificationCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendVerificationCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResendVerificationCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email sent",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or already verified",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/logout": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Authentication & Profile"
        ],
        "summary": "Logout user (invalidate token)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/change-password": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Authentication & Profile"
        ],
        "summary": "Change user password",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Current and new password",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Invalid current password",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/validate-reset-token": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Authentication & Profile"
        ],
        "summary": "Validate reset token",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Reset token to validate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateResetTokenCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateResetTokenCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateResetTokenCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token is valid",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired token",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Users/profile": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Authentication & Profile"
        ],
        "summary": "Get current user profile",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "üë®‚Äçüéì Student - Authentication & Profile"
        ],
        "summary": "Update user profile",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserProfileCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserProfileCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserProfileCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Users/change-password": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Authentication & Profile"
        ],
        "summary": "Change user password",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Users/preferences": {
      "put": {
        "tags": [
          "üë®‚Äçüéì Student - Authentication & Profile"
        ],
        "summary": "Update user preferences",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPreferencesCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPreferencesCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPreferencesCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Users/statistics": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Authentication & Profile"
        ],
        "summary": "Get user statistics",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Users/achievements": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Authentication & Profile"
        ],
        "summary": "Get user achievements",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Content": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Content Consumption"
        ],
        "summary": "Get all content",
        "parameters": [
          {
            "name": "learningPathId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "type",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Content Consumption"
        ],
        "summary": "Create new content (Content Creator only)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContentCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContentCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContentCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Content/{id}": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Content Consumption"
        ],
        "summary": "Get content by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "üë®‚Äçüéì Student - Content Consumption"
        ],
        "summary": "Update content (Content Creator only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContentCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContentCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContentCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "üë®‚Äçüéì Student - Content Consumption"
        ],
        "summary": "Delete content (Content Creator only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Content/{id}/complete": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Content Consumption"
        ],
        "summary": "Mark content as completed (Student only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Content/{id}/progress": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Content Consumption"
        ],
        "summary": "Get content progress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Content/{id}/next": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Content Consumption"
        ],
        "summary": "Get next content in learning path",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "learningPathId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Content/{id}/previous": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Content Consumption"
        ],
        "summary": "Get previous content in learning path",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "learningPathId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Dashboard/overview": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Dashboard"
        ],
        "summary": "Get student dashboard overview",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard overview retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardOverviewDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardOverviewDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardOverviewDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/progress": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Dashboard"
        ],
        "summary": "Get student learning progress",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Learning progress retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardLearningProgressDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardLearningProgressDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardLearningProgressDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/achievements": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Dashboard"
        ],
        "summary": "Get student achievements",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Achievements retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardAchievementDtoListResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardAchievementDtoListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardAchievementDtoListResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/recommendations": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Dashboard"
        ],
        "summary": "Get personalized recommendations",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recommendations retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationDtoListResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationDtoListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationDtoListResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/calendar": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Dashboard"
        ],
        "summary": "Get learning calendar",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "description": "Month to get calendar for (optional)",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "Year to get calendar for (optional)",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LearningCalendarDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningCalendarDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningCalendarDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/activities": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Dashboard"
        ],
        "summary": "Get recent activities",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of activities to return (default: 10)",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activities retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDtoListResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDtoListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDtoListResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/statistics": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Dashboard"
        ],
        "summary": "Get learning statistics",
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "Period for statistics (week, month, year)",
            "style": "form",
            "schema": {
              "type": "string",
              "default": "month"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStatisticsDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStatisticsDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStatisticsDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/streak": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Dashboard"
        ],
        "summary": "Get study streak information",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Streak information retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyStreakDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyStreakDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyStreakDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Files/upload": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - File Management"
        ],
        "summary": "Upload a file",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ContentType": {
                    "type": "string"
                  },
                  "ContentDisposition": {
                    "type": "string"
                  },
                  "Headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string"
                  },
                  "FileName": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "ContentType": {
                  "style": "form"
                },
                "ContentDisposition": {
                  "style": "form"
                },
                "Headers": {
                  "style": "form"
                },
                "Length": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                },
                "description": {
                  "style": "form"
                },
                "category": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File uploaded successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileUploadDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileUploadDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileUploadDtoResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid file or file too large",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Files/upload-multiple": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - File Management"
        ],
        "summary": "Upload multiple files",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "category": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "files": {
                  "style": "form"
                },
                "category": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Files uploaded successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileUploadDtoListResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileUploadDtoListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileUploadDtoListResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid files or files too large",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Files/{id}": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - File Management"
        ],
        "summary": "Download a file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File downloaded successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "üë®‚Äçüéì Student - File Management"
        ],
        "summary": "Delete a file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File deleted successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "üë®‚Äçüéì Student - File Management"
        ],
        "summary": "Update file information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "File update data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFileCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFileCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFileCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Files/my-files": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - File Management"
        ],
        "summary": "Get user's files",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Filter by category (optional)",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default: 1)",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size (default: 10)",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileInfoDtoPagedResultResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileInfoDtoPagedResultResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileInfoDtoPagedResultResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Files/{id}/details": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - File Management"
        ],
        "summary": "Get file details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File details retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDetailsDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDetailsDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDetailsDtoResult"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Files/{id}/share": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - File Management"
        ],
        "summary": "Share a file with other users",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Share settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareFileCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareFileCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShareFileCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File shared successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileShareDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileShareDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileShareDtoResult"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Files/categories": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - File Management"
        ],
        "summary": "Get file categories",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categories retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileCategoryDtoListResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileCategoryDtoListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileCategoryDtoListResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LearningPaths": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Learning Paths"
        ],
        "summary": "Get all learning paths",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "difficultyLevel",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Learning Paths"
        ],
        "summary": "Create new learning path (Content Creator only)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLearningPathCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLearningPathCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLearningPathCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/LearningPaths/{id}": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Learning Paths"
        ],
        "summary": "Get learning path by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "üë®‚Äçüéì Student - Learning Paths"
        ],
        "summary": "Update learning path (Content Creator only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLearningPathCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLearningPathCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLearningPathCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "üë®‚Äçüéì Student - Learning Paths"
        ],
        "summary": "Delete learning path (Content Creator only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/LearningPaths/{id}/enroll": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Learning Paths"
        ],
        "summary": "Enroll in learning path (Student only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/LearningPaths/my-learning-paths": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Learning Paths"
        ],
        "summary": "Get user's enrolled learning paths",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Notifications": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Notifications"
        ],
        "summary": "Get user notifications",
        "parameters": [
          {
            "name": "unreadOnly",
            "in": "query",
            "description": "Get only unread notifications (default: false)",
            "style": "form",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default: 1)",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size (default: 20)",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notifications retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDtoPagedResultResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDtoPagedResultResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDtoPagedResultResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notifications/{id}/read": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Notifications"
        ],
        "summary": "Mark notification as read",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Notification ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification marked as read",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "Notification not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notifications/mark-all-read": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Notifications"
        ],
        "summary": "Mark all notifications as read",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All notifications marked as read",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notifications/{id}": {
      "delete": {
        "tags": [
          "üë®‚Äçüéì Student - Notifications"
        ],
        "summary": "Delete notification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Notification ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification deleted successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "Notification not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notifications/settings": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Notifications"
        ],
        "summary": "Get notification settings",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Settings retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettingsDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettingsDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettingsDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "üë®‚Äçüéì Student - Notifications"
        ],
        "summary": "Update notification settings",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Notification settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationSettingsCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationSettingsCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationSettingsCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Settings updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notifications/unread-count": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Notifications"
        ],
        "summary": "Get unread notifications count",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Count retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notifications/send": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Notifications"
        ],
        "summary": "Send notification to user (Admin only)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Notification data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendNotificationCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendNotificationCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendNotificationCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification sent successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notifications/send-bulk": {
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Notifications"
        ],
        "summary": "Send bulk notifications (Admin only)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Bulk notification data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendBulkNotificationCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendBulkNotificationCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendBulkNotificationCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notifications sent successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notifications/templates": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Notifications"
        ],
        "summary": "Get notification templates (Admin only)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Templates retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateDtoListResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateDtoListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateDtoListResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Resources/cv-templates": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Resources & Tools"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Resources/cover-letter-templates": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Resources & Tools"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Resources/interview-questions": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Resources & Tools"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Resources/interview-questions/{category}": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Resources & Tools"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Resources": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Resources & Tools"
        ],
        "summary": "Get all resources",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "learningPathId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "üë®‚Äçüéì Student - Resources & Tools"
        ],
        "summary": "Create new resource (Content Creator only)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateResourceCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateResourceCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateResourceCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Resources/{id}": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Resources & Tools"
        ],
        "summary": "Get resource by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "üë®‚Äçüéì Student - Resources & Tools"
        ],
        "summary": "Update resource (Content Creator only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateResourceCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateResourceCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateResourceCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "üë®‚Äçüéì Student - Resources & Tools"
        ],
        "summary": "Delete resource (Content Creator only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Resources/{id}/download": {
      "get": {
        "tags": [
          "üë®‚Äçüéì Student - Resources & Tools"
        ],
        "summary": "Download resource file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/creator/dashboard": {
      "get": {
        "tags": [
          "üë®‚Äçüè´ Content Creator - Management"
        ],
        "summary": "Get creator dashboard overview",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreatorDashboardDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatorDashboardDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatorDashboardDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/creator/learning-paths": {
      "get": {
        "tags": [
          "üë®‚Äçüè´ Content Creator - Management"
        ],
        "summary": "Get creator's learning paths",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Learning paths retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreatorLearningPathDtoPagedResultResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatorLearningPathDtoPagedResultResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatorLearningPathDtoPagedResultResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "üë®‚Äçüè´ Content Creator - Management"
        ],
        "summary": "Create new learning path",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Learning path data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLearningPathCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLearningPathCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLearningPathCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Learning path created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreatorLearningPathDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatorLearningPathDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatorLearningPathDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/creator/learning-paths/{id}": {
      "put": {
        "tags": [
          "üë®‚Äçüè´ Content Creator - Management"
        ],
        "summary": "Update learning path",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Learning path ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Learning path update data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLearningPathCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLearningPathCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLearningPathCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Learning path updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "Learning path not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "üë®‚Äçüè´ Content Creator - Management"
        ],
        "summary": "Delete learning path",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Learning path ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Learning path deleted successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "Learning path not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/creator/learning-paths/{id}/publish": {
      "post": {
        "tags": [
          "üë®‚Äçüè´ Content Creator - Management"
        ],
        "summary": "Publish learning path",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Learning path ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Learning path published successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "Learning path not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/creator/learning-paths/{id}/unpublish": {
      "post": {
        "tags": [
          "üë®‚Äçüè´ Content Creator - Management"
        ],
        "summary": "Unpublish learning path",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Learning path ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Learning path unpublished successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "Learning path not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/creator/learning-paths/{id}/analytics": {
      "get": {
        "tags": [
          "üë®‚Äçüè´ Content Creator - Management"
        ],
        "summary": "Get learning path analytics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Learning path ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LearningPathAnalyticsDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningPathAnalyticsDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningPathAnalyticsDtoResult"
                }
              }
            }
          },
          "404": {
            "description": "Learning path not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/creator/students": {
      "get": {
        "tags": [
          "üë®‚Äçüè´ Content Creator - Management"
        ],
        "summary": "Get enrolled students",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "learningPathId",
            "in": "query",
            "description": "Filter by learning path ID",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Students retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreatorStudentDtoPagedResultResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatorStudentDtoPagedResultResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatorStudentDtoPagedResultResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/creator/students/{studentId}/progress": {
      "get": {
        "tags": [
          "üë®‚Äçüè´ Content Creator - Management"
        ],
        "summary": "Get student progress",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "description": "Student ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "learningPathId",
            "in": "query",
            "description": "Learning path ID",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Progress retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProgressDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProgressDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProgressDtoResult"
                }
              }
            }
          },
          "404": {
            "description": "Student or learning path not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/creator/students/{studentId}/feedback": {
      "post": {
        "tags": [
          "üë®‚Äçüè´ Content Creator - Management"
        ],
        "summary": "Provide feedback to student",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "description": "Student ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Feedback data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProvideFeedbackCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProvideFeedbackCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProvideFeedbackCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feedback provided successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "Student not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/creator/engagement": {
      "get": {
        "tags": [
          "üë®‚Äçüè´ Content Creator - Management"
        ],
        "summary": "Get engagement analytics",
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "Period for analytics",
            "style": "form",
            "schema": {
              "type": "string",
              "default": "month"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EngagementAnalyticsDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngagementAnalyticsDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngagementAnalyticsDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/creator/analytics": {
      "get": {
        "tags": [
          "üë®‚Äçüè´ Content Creator - Management"
        ],
        "summary": "Get creator analytics",
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "Period for analytics",
            "style": "form",
            "schema": {
              "type": "string",
              "default": "month"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreatorAnalyticsDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatorAnalyticsDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatorAnalyticsDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/creator/revenue": {
      "get": {
        "tags": [
          "üë®‚Äçüè´ Content Creator - Management"
        ],
        "summary": "Get revenue analytics",
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "Period for analytics",
            "style": "form",
            "schema": {
              "type": "string",
              "default": "month"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RevenueAnalyticsDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevenueAnalyticsDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevenueAnalyticsDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/login": {
      "post": {
        "tags": [
          "üë®‚Äçüíº Admin - System Management"
        ],
        "summary": "Admin login",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Admin login credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminLoginCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminLoginCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdminLoginCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdminAuthResultResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminAuthResultResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminAuthResultResult"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/dashboard": {
      "get": {
        "tags": [
          "üë®‚Äçüíº Admin - System Management"
        ],
        "summary": "Get admin dashboard overview",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdminDashboardDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminDashboardDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminDashboardDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/statistics": {
      "get": {
        "tags": [
          "üë®‚Äçüíº Admin - System Management"
        ],
        "summary": "Get system statistics",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SystemStatisticsDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemStatisticsDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemStatisticsDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/health": {
      "get": {
        "tags": [
          "üë®‚Äçüíº Admin - System Management"
        ],
        "summary": "Get system health status",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Health status retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SystemHealthDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemHealthDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemHealthDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/audit-logs": {
      "get": {
        "tags": [
          "üë®‚Äçüíº Admin - System Management"
        ],
        "summary": "Get audit logs",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Filter by user ID",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "Filter by action",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Filter by start date",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Filter by end date",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audit logs retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogDtoPagedResultResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogDtoPagedResultResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogDtoPagedResultResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/config": {
      "get": {
        "tags": [
          "üë®‚Äçüíº Admin - System Management"
        ],
        "summary": "Get system configuration",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SystemConfigDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemConfigDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemConfigDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "üë®‚Äçüíº Admin - System Management"
        ],
        "summary": "Update system configuration",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Configuration data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystemConfigCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystemConfigCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystemConfigCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Configuration updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/performance": {
      "get": {
        "tags": [
          "üë®‚Äçüíº Admin - System Management"
        ],
        "summary": "Get performance metrics",
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "Period for metrics",
            "style": "form",
            "schema": {
              "type": "string",
              "default": "24h"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Metrics retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceMetricsDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceMetricsDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceMetricsDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/errors": {
      "get": {
        "tags": [
          "üë®‚Äçüíº Admin - System Management"
        ],
        "summary": "Get error logs",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "severity",
            "in": "query",
            "description": "Filter by severity",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Filter by start date",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Filter by end date",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Error logs retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorLogDtoPagedResultResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorLogDtoPagedResultResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorLogDtoPagedResultResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/create-admin": {
      "post": {
        "tags": [
          "üë®‚Äçüíº Admin - System Management"
        ],
        "summary": "Create admin user",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Admin user data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdminUserCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdminUserCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdminUserCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Admin user created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/analytics": {
      "get": {
        "tags": [
          "üë®‚Äçüíº Admin - System Management"
        ],
        "summary": "Get platform analytics",
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "Period for analytics",
            "style": "form",
            "schema": {
              "type": "string",
              "default": "month"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformAnalyticsDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformAnalyticsDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformAnalyticsDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users": {
      "get": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Get all users",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search term",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "Filter by role",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserDtoPagedResultResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserDtoPagedResultResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserDtoPagedResultResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{id}": {
      "get": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Get user details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserDetailsDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserDetailsDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserDetailsDtoResult"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Update user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User update data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Delete user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{id}/suspend": {
      "post": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Suspend user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Suspension data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuspendUserCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SuspendUserCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SuspendUserCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User suspended successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{id}/activate": {
      "post": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Activate user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User activated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{id}/role": {
      "put": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Update user role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Role update data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRoleCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRoleCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRoleCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User role updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{id}/analytics": {
      "get": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Get user analytics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserAnalyticsDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAnalyticsDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAnalyticsDtoResult"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{id}/activity": {
      "get": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Get user activity log",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activity log retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserActivityDtoPagedResultResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserActivityDtoPagedResultResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserActivityDtoPagedResultResult"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{id}/reset-password": {
      "post": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Reset user password",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Password reset data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminResetPasswordCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminResetPasswordCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdminResetPasswordCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/analytics": {
      "get": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Get users analytics summary",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UsersAnalyticsDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersAnalyticsDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersAnalyticsDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{id}/message": {
      "post": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Send message to user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Message data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageToUserCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageToUserCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageToUserCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/export": {
      "get": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Export users data",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "description": "Export format (csv, excel)",
            "style": "form",
            "schema": {
              "type": "string",
              "default": "csv"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data exported successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Progress/content/{contentId}/start": {
      "post": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Mark content as started",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "Content ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Content marked as started",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "Content not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Progress/content/{contentId}/progress": {
      "post": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Update content progress",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "Content ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Progress data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContentProgressCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContentProgressCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContentProgressCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Progress updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "Content not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Progress/content/{contentId}/complete": {
      "post": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Mark content as completed",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "Content ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Content marked as completed",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "Content not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Progress/overall": {
      "get": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Get user's overall progress",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Progress retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OverallProgressDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverallProgressDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverallProgressDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Progress/learning-path/{learningPathId}": {
      "get": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Get learning path progress",
        "parameters": [
          {
            "name": "learningPathId",
            "in": "path",
            "description": "Learning path ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Progress retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LearningPathProgressDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningPathProgressDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningPathProgressDtoResult"
                }
              }
            }
          },
          "404": {
            "description": "Learning path not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Progress/content/{contentId}": {
      "get": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Get content progress details",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "Content ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Progress retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentProgressDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentProgressDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentProgressDtoResult"
                }
              }
            }
          },
          "404": {
            "description": "Content not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Progress/statistics": {
      "get": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Get progress statistics",
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "Period for statistics (week, month, year)",
            "style": "form",
            "schema": {
              "type": "string",
              "default": "month"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressStatisticsDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressStatisticsDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressStatisticsDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Progress/streaks": {
      "get": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Get learning streaks",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Streaks retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStreakDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStreakDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStreakDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Progress/goals": {
      "post": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Set learning goals",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Learning goals data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningGoalsCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningGoalsCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningGoalsCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Goals set successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Get learning goals",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Goals retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LearningGoalsDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningGoalsDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningGoalsDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Progress/content/{contentId}/time": {
      "post": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Track time spent on content",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "Content ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Time tracking data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackTimeSpentCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackTimeSpentCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TrackTimeSpentCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Time tracked successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "Content not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/Progress/time-analytics": {
      "get": {
        "tags": [
          "ÔøΩ General"
        ],
        "summary": "Get time spent analytics",
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "Period for analytics (week, month, year)",
            "style": "form",
            "schema": {
              "type": "string",
              "default": "month"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSpentAnalyticsDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSpentAnalyticsDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSpentAnalyticsDtoResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActivityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "relatedEntity": {
            "type": "string",
            "nullable": true
          },
          "relatedEntityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActivityDtoListResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityDto"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdminAuthResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/AdminUserDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AdminAuthResultResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/AdminAuthResult"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdminContentEngagementDto": {
        "type": "object",
        "properties": {
          "totalViews": {
            "type": "integer",
            "format": "int32"
          },
          "totalCompletions": {
            "type": "integer",
            "format": "int32"
          },
          "averageEngagementTime": {
            "type": "number",
            "format": "double"
          },
          "categoryEngagement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryEngagementDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdminDashboardDto": {
        "type": "object",
        "properties": {
          "totalUsers": {
            "type": "integer",
            "format": "int32"
          },
          "totalLearningPaths": {
            "type": "integer",
            "format": "int32"
          },
          "totalContent": {
            "type": "integer",
            "format": "int32"
          },
          "activeUsers": {
            "type": "integer",
            "format": "int32"
          },
          "totalRevenue": {
            "type": "number",
            "format": "double"
          },
          "recentActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminRecentActivityDto"
            },
            "nullable": true
          },
          "systemAlerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemAlertDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdminDashboardDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/AdminDashboardDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdminLoginCommand": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdminRecentActivityDto": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "details": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdminResetPasswordCommand": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdminUserDetailsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "learningPaths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserLearningPathDto"
            },
            "nullable": true
          },
          "recentActivity": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserActivityDto"
            },
            "nullable": true
          },
          "statistics": {
            "$ref": "#/components/schemas/UserStatisticsDto"
          },
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserSessionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdminUserDetailsDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/AdminUserDetailsDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdminUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AdminUserDtoPagedResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminUserDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AdminUserDtoPagedResultResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/AdminUserDtoPagedResult"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AnalyzeSkillsCommand": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "assessmentResults": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssessmentProgressDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "score": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxScore": {
            "type": "integer",
            "format": "int32"
          },
          "completionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "attemptCount": {
            "type": "integer",
            "format": "int32"
          },
          "isCompleted": {
            "type": "boolean"
          },
          "isPassed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AssessmentType": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "AuditLogDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "nullable": true
          },
          "userAgent": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuditLogDtoPagedResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLogDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AuditLogDtoPagedResultResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/AuditLogDtoPagedResult"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AuthResultResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/AuthResult"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalendarEventDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoryEngagementDto": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "nullable": true
          },
          "views": {
            "type": "integer",
            "format": "int32"
          },
          "completions": {
            "type": "integer",
            "format": "int32"
          },
          "engagementRate": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CategoryTimeDto": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "nullable": true
          },
          "timeSpent": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "percentage": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordCommand": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "currentPassword": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "confirmPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChatWithAssistantCommand": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContentProgressDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "progressPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "completionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timeSpent": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "isCompleted": {
            "type": "boolean"
          },
          "lastAccessed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContentProgressDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/ContentProgressDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContentStatistics": {
        "type": "object",
        "properties": {
          "totalLearningPaths": {
            "type": "integer",
            "format": "int32"
          },
          "totalResources": {
            "type": "integer",
            "format": "int32"
          },
          "totalAssessments": {
            "type": "integer",
            "format": "int32"
          },
          "publishedContent": {
            "type": "integer",
            "format": "int32"
          },
          "draftContent": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ContentType": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "ContentTypeTimeDto": {
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "timeSpent": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "percentage": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CreateAdminUserCommand": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAssessmentCommand": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "assessmentType": {
            "$ref": "#/components/schemas/AssessmentType"
          },
          "timeLimit": {
            "type": "integer",
            "format": "int32"
          },
          "passingScore": {
            "type": "integer",
            "format": "int32"
          },
          "learningPathId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateQuestionDto"
            },
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateContentCommand": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "$ref": "#/components/schemas/ContentType"
          },
          "videoUrl": {
            "type": "string",
            "nullable": true
          },
          "documentUrl": {
            "type": "string",
            "nullable": true
          },
          "textContent": {
            "type": "string",
            "nullable": true
          },
          "durationMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "isRequired": {
            "type": "boolean"
          },
          "learningPathId": {
            "type": "integer",
            "format": "int32"
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateLearningPathCommand": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "estimatedDurationHours": {
            "type": "integer",
            "format": "int32"
          },
          "difficultyLevel": {
            "$ref": "#/components/schemas/DifficultyLevel"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "prerequisites": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "learningObjectives": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateQuestionDto": {
        "type": "object",
        "properties": {
          "questionText": {
            "type": "string",
            "nullable": true
          },
          "questionType": {
            "$ref": "#/components/schemas/QuestionType"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "correctAnswer": {
            "type": "string",
            "nullable": true
          },
          "explanation": {
            "type": "string",
            "nullable": true
          },
          "points": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateResourceCommand": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "resourceType": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "fileUrl": {
            "type": "string",
            "nullable": true
          },
          "templateContent": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatorAnalyticsDto": {
        "type": "object",
        "properties": {
          "totalStudents": {
            "type": "integer",
            "format": "int32"
          },
          "activeStudents": {
            "type": "integer",
            "format": "int32"
          },
          "averageCompletion": {
            "type": "number",
            "format": "double"
          },
          "averageRating": {
            "type": "number",
            "format": "double"
          },
          "totalRevenue": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyStats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthlyStatsDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatorAnalyticsDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/CreatorAnalyticsDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatorAssessmentResultDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "assessmentTitle": {
            "type": "string",
            "nullable": true
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "maxScore": {
            "type": "integer",
            "format": "int32"
          },
          "percentage": {
            "type": "number",
            "format": "double"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          },
          "attemptNumber": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreatorContentEngagementDto": {
        "type": "object",
        "properties": {
          "contentId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "views": {
            "type": "integer",
            "format": "int32"
          },
          "totalTimeSpent": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "completionRate": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CreatorDashboardDto": {
        "type": "object",
        "properties": {
          "totalLearningPaths": {
            "type": "integer",
            "format": "int32"
          },
          "totalStudents": {
            "type": "integer",
            "format": "int32"
          },
          "totalRevenue": {
            "type": "integer",
            "format": "int32"
          },
          "totalRatings": {
            "type": "integer",
            "format": "int32"
          },
          "averageRating": {
            "type": "number",
            "format": "double"
          },
          "newEnrollmentsThisMonth": {
            "type": "integer",
            "format": "int32"
          },
          "popularLearningPaths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PopularLearningPathDto"
            },
            "nullable": true
          },
          "recentEnrollments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecentEnrollmentDto"
            },
            "nullable": true
          },
          "recentReviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatorDashboardDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/CreatorDashboardDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatorLearningPathDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "totalContent": {
            "type": "integer",
            "format": "int32"
          },
          "completedContent": {
            "type": "integer",
            "format": "int32"
          },
          "enrolledStudents": {
            "type": "integer",
            "format": "int32"
          },
          "averageRating": {
            "type": "number",
            "format": "double"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatorLearningPathDtoPagedResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatorLearningPathDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CreatorLearningPathDtoPagedResultResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/CreatorLearningPathDtoPagedResult"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatorLearningPathDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/CreatorLearningPathDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatorStudentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "learningPathTitle": {
            "type": "string",
            "nullable": true
          },
          "enrollmentDate": {
            "type": "string",
            "format": "date-time"
          },
          "progressPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "lastAccessed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatorStudentDtoPagedResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatorStudentDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CreatorStudentDtoPagedResultResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/CreatorStudentDtoPagedResult"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DailyEnrollmentDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "enrollments": {
            "type": "integer",
            "format": "int32"
          },
          "completions": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DailyGrowthDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "newUsers": {
            "type": "integer",
            "format": "int32"
          },
          "activeUsers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DailyStatisticDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "timeSpent": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "completedContents": {
            "type": "integer",
            "format": "int32"
          },
          "sessions": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DailyTimeSpentDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "timeSpent": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "sessionCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DashboardAchievementDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "badgeUrl": {
            "type": "string",
            "nullable": true
          },
          "dateEarned": {
            "type": "string",
            "format": "date-time"
          },
          "category": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DashboardAchievementDtoListResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DashboardAchievementDto"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DashboardLearningPathProgressDto": {
        "type": "object",
        "properties": {
          "learningPathId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "progress": {
            "type": "number",
            "format": "double"
          },
          "timeSpent": {
            "$ref": "#/components/schemas/TimeSpan"
          }
        },
        "additionalProperties": false
      },
      "DashboardLearningProgressDto": {
        "type": "object",
        "properties": {
          "totalLearningPaths": {
            "type": "integer",
            "format": "int32"
          },
          "completedLearningPaths": {
            "type": "integer",
            "format": "int32"
          },
          "inProgressLearningPaths": {
            "type": "integer",
            "format": "int32"
          },
          "overallProgress": {
            "type": "number",
            "format": "double"
          },
          "learningPathProgress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DashboardLearningPathProgressDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DashboardLearningProgressDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/DashboardLearningProgressDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DashboardOverviewDto": {
        "type": "object",
        "properties": {
          "totalLearningPaths": {
            "type": "integer",
            "format": "int32"
          },
          "completedLearningPaths": {
            "type": "integer",
            "format": "int32"
          },
          "inProgressLearningPaths": {
            "type": "integer",
            "format": "int32"
          },
          "totalAssessments": {
            "type": "integer",
            "format": "int32"
          },
          "completedAssessments": {
            "type": "integer",
            "format": "int32"
          },
          "totalTimeSpentMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "unreadNotifications": {
            "type": "integer",
            "format": "int32"
          },
          "totalAchievements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPoints": {
            "type": "integer",
            "format": "int32"
          },
          "overallProgress": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "DashboardOverviewDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/DashboardOverviewDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DifficultyLevel": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "EngagementAnalyticsDto": {
        "type": "object",
        "properties": {
          "totalSessions": {
            "type": "integer",
            "format": "int32"
          },
          "averageSessionTime": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "retentionRate": {
            "type": "number",
            "format": "double"
          },
          "dropOffRate": {
            "type": "integer",
            "format": "int32"
          },
          "contentEngagement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatorContentEngagementDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EngagementAnalyticsDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/EngagementAnalyticsDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EngagementStatistics": {
        "type": "object",
        "properties": {
          "averageSessionDuration": {
            "type": "number",
            "format": "double"
          },
          "totalSessions": {
            "type": "integer",
            "format": "int32"
          },
          "completionRate": {
            "type": "number",
            "format": "double"
          },
          "totalInteractions": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ErrorLogDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "level": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "exception": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorLogDtoPagedResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorLogDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ErrorLogDtoPagedResultResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/ErrorLogDtoPagedResult"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "fileCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FileCategoryDtoListResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileCategoryDto"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileDetailsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "originalName": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "uploadedAt": {
            "type": "string",
            "format": "date-time"
          },
          "uploadedBy": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileDetailsDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/FileDetailsDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileInfoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "originalFileName": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "fileSize": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "uploadedBy": {
            "type": "string",
            "nullable": true
          },
          "fileUrl": {
            "type": "string",
            "nullable": true
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileInfoDtoPagedResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileInfoDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FileInfoDtoPagedResultResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/FileInfoDtoPagedResult"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileShareDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "fileId": {
            "type": "string",
            "format": "uuid"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "sharedWithUsers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "permission": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shareUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileShareDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/FileShareDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileUploadDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "originalFileName": {
            "type": "string",
            "nullable": true
          },
          "fileType": {
            "type": "string",
            "nullable": true
          },
          "fileSize": {
            "type": "integer",
            "format": "int64"
          },
          "filePath": {
            "type": "string",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "uploadedAt": {
            "type": "string",
            "format": "date-time"
          },
          "uploadedBy": {
            "type": "string",
            "nullable": true
          },
          "sharedWith": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileShareDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileUploadDtoListResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileUploadDto"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileUploadDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/FileUploadDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ForgotPasswordCommand": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenerateCVCommand": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "templateId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HealthCheckDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "responseTime": {
            "$ref": "#/components/schemas/TimeSpan"
          }
        },
        "additionalProperties": false
      },
      "Int32Result": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LearningCalendarDto": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalendarEventDto"
            },
            "nullable": true
          },
          "studyStreaks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudyStreakDto"
            },
            "nullable": true
          },
          "dailyProgress": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LearningCalendarDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/LearningCalendarDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LearningGoalDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "target": {
            "type": "integer",
            "format": "int32"
          },
          "targetDate": {
            "type": "string",
            "format": "date-time"
          },
          "isCompleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LearningGoalsDto": {
        "type": "object",
        "properties": {
          "goals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LearningGoalDto"
            },
            "nullable": true
          },
          "completedGoals": {
            "type": "integer",
            "format": "int32"
          },
          "totalGoals": {
            "type": "integer",
            "format": "int32"
          },
          "completionRate": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "LearningGoalsDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/LearningGoalsDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LearningPathAnalyticsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "totalEnrollments": {
            "type": "integer",
            "format": "int32"
          },
          "completedEnrollments": {
            "type": "integer",
            "format": "int32"
          },
          "completionRate": {
            "type": "number",
            "format": "double"
          },
          "averageRating": {
            "type": "number",
            "format": "double"
          },
          "totalRatings": {
            "type": "integer",
            "format": "int32"
          },
          "totalRevenue": {
            "type": "number",
            "format": "double"
          },
          "averageTimeToComplete": {
            "type": "number",
            "format": "double"
          },
          "dailyEnrollments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DailyEnrollmentDto"
            },
            "nullable": true
          },
          "ratingDistribution": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RatingDistributionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LearningPathAnalyticsDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/LearningPathAnalyticsDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LearningPathProgressDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "progressPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "enrollmentDate": {
            "type": "string",
            "format": "date-time"
          },
          "completionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timeSpent": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "contentProgress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentProgressDto"
            },
            "nullable": true
          },
          "assessmentProgress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssessmentProgressDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LearningPathProgressDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/LearningPathProgressDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LearningPathRevenueDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "revenue": {
            "type": "number",
            "format": "double"
          },
          "sales": {
            "type": "integer",
            "format": "int32"
          },
          "averagePrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "LearningStatisticsDto": {
        "type": "object",
        "properties": {
          "totalTimeSpent": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "totalSessions": {
            "type": "integer",
            "format": "int32"
          },
          "averageSessionTime": {
            "type": "number",
            "format": "double"
          },
          "completedContents": {
            "type": "integer",
            "format": "int32"
          },
          "totalContents": {
            "type": "integer",
            "format": "int32"
          },
          "completionRate": {
            "type": "number",
            "format": "double"
          },
          "dailyStats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DailyStatisticDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LearningStatisticsDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/LearningStatisticsDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LearningStreakDto": {
        "type": "object",
        "properties": {
          "currentStreak": {
            "type": "integer",
            "format": "int32"
          },
          "longestStreak": {
            "type": "integer",
            "format": "int32"
          },
          "lastLearningDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "learningDates": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LearningStreakDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/LearningStreakDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginCommand": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "rememberMe": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MonthlyRevenueDto": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "revenue": {
            "type": "number",
            "format": "double"
          },
          "sales": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MonthlyStatsDto": {
        "type": "object",
        "properties": {
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "newStudents": {
            "type": "integer",
            "format": "int32"
          },
          "activeStudents": {
            "type": "integer",
            "format": "int32"
          },
          "completionRate": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "NotificationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "isRead": {
            "type": "boolean"
          },
          "readAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actionUrl": {
            "type": "string",
            "nullable": true
          },
          "actionText": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "NotificationDtoPagedResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "NotificationDtoPagedResultResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/NotificationDtoPagedResult"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationSettingsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "emailNotifications": {
            "type": "boolean"
          },
          "pushNotifications": {
            "type": "boolean"
          },
          "learningReminders": {
            "type": "boolean"
          },
          "assessmentNotifications": {
            "type": "boolean"
          },
          "systemUpdates": {
            "type": "boolean"
          },
          "marketingEmails": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "NotificationSettingsDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/NotificationSettingsDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationTemplateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "template": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationTemplateDtoListResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationTemplateDto"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OverallProgressDto": {
        "type": "object",
        "properties": {
          "totalLearningPaths": {
            "type": "integer",
            "format": "int32"
          },
          "completedLearningPaths": {
            "type": "integer",
            "format": "int32"
          },
          "inProgressLearningPaths": {
            "type": "integer",
            "format": "int32"
          },
          "overallCompletionRate": {
            "type": "number",
            "format": "double"
          },
          "totalTimeSpent": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "currentStreak": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OverallProgressDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/OverallProgressDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PerformanceMetricsDto": {
        "type": "object",
        "properties": {
          "averageResponseTime": {
            "type": "number",
            "format": "double"
          },
          "totalRequests": {
            "type": "integer",
            "format": "int64"
          },
          "errorCount": {
            "type": "integer",
            "format": "int32"
          },
          "errorRate": {
            "type": "number",
            "format": "double"
          },
          "uptime": {
            "type": "number",
            "format": "double"
          },
          "endpointMetrics": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PerformanceMetricsDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PerformanceMetricsDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PerformanceStatistics": {
        "type": "object",
        "properties": {
          "averageResponseTime": {
            "type": "number",
            "format": "double"
          },
          "systemUptime": {
            "type": "number",
            "format": "double"
          },
          "totalRequests": {
            "type": "integer",
            "format": "int64"
          },
          "errorRate": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PlatformAnalyticsDto": {
        "type": "object",
        "properties": {
          "userGrowth": {
            "$ref": "#/components/schemas/UserGrowthDto"
          },
          "contentEngagement": {
            "$ref": "#/components/schemas/AdminContentEngagementDto"
          },
          "revenue": {
            "$ref": "#/components/schemas/RevenueAnalyticsDto"
          },
          "popularContent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PopularContentDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PlatformAnalyticsDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/PlatformAnalyticsDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PopularContentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "views": {
            "type": "integer",
            "format": "int32"
          },
          "completions": {
            "type": "integer",
            "format": "int32"
          },
          "rating": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PopularLearningPathDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "enrollmentCount": {
            "type": "integer",
            "format": "int32"
          },
          "averageRating": {
            "type": "number",
            "format": "double"
          },
          "revenue": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ProgressCommandsLearningGoalDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "targetDate": {
            "type": "string",
            "format": "date-time"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProgressStatisticsDto": {
        "type": "object",
        "properties": {
          "totalContent": {
            "type": "integer",
            "format": "int32"
          },
          "completedContent": {
            "type": "integer",
            "format": "int32"
          },
          "inProgressContent": {
            "type": "integer",
            "format": "int32"
          },
          "completionRate": {
            "type": "number",
            "format": "double"
          },
          "weeklyTimeSpent": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "weeklyGoalHours": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProgressStatisticsDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/ProgressStatisticsDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProvideFeedbackCommand": {
        "type": "object",
        "properties": {
          "studentId": {
            "type": "string",
            "format": "uuid"
          },
          "learningPathId": {
            "type": "string",
            "format": "uuid"
          },
          "feedbackText": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "suggestions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuestionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "questionText": {
            "type": "string",
            "nullable": true
          },
          "questionType": {
            "$ref": "#/components/schemas/QuestionType"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "explanation": {
            "type": "string",
            "nullable": true
          },
          "points": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "QuestionType": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "RatingDistributionDto": {
        "type": "object",
        "properties": {
          "stars": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "percentage": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "RecentEnrollmentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "studentName": {
            "type": "string",
            "nullable": true
          },
          "learningPathTitle": {
            "type": "string",
            "nullable": true
          },
          "enrollmentDate": {
            "type": "string",
            "format": "date-time"
          },
          "amountPaid": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "RecommendCareerCommand": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "interests": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "educationLevel": {
            "type": "string",
            "nullable": true
          },
          "experience": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RecommendationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "actionUrl": {
            "type": "string",
            "nullable": true
          },
          "actionText": {
            "type": "string",
            "nullable": true
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RecommendationDtoListResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecommendationDto"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenCommand": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterUserCommand": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResendVerificationCommand": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordCommand": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "confirmPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceType": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "Result": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RevenueAnalyticsDto": {
        "type": "object",
        "properties": {
          "totalRevenue": {
            "type": "number",
            "format": "double"
          },
          "monthlyRevenue": {
            "type": "number",
            "format": "double"
          },
          "averageOrderValue": {
            "type": "number",
            "format": "double"
          },
          "monthlyTrend": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthlyRevenueDto"
            },
            "nullable": true
          },
          "topEarningPaths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LearningPathRevenueDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RevenueAnalyticsDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/RevenueAnalyticsDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReviewDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "studentName": {
            "type": "string",
            "nullable": true
          },
          "learningPathTitle": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SendBulkNotificationCommand": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendMessageToUserCommand": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendNotificationCommand": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetLearningGoalsCommand": {
        "type": "object",
        "properties": {
          "goals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgressCommandsLearningGoalDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShareFileCommand": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "integer",
            "format": "int32"
          },
          "sharedWithUserId": {
            "type": "integer",
            "format": "int32"
          },
          "sharedByUserId": {
            "type": "integer",
            "format": "int32"
          },
          "accessLevel": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StudentProgressDto": {
        "type": "object",
        "properties": {
          "studentId": {
            "type": "string",
            "format": "uuid"
          },
          "studentName": {
            "type": "string",
            "nullable": true
          },
          "learningPathId": {
            "type": "string",
            "format": "uuid"
          },
          "learningPathTitle": {
            "type": "string",
            "nullable": true
          },
          "enrollmentDate": {
            "type": "string",
            "format": "date-time"
          },
          "progressPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "lastAccessed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalTimeSpent": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "contentProgress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentProgressDto"
            },
            "nullable": true
          },
          "assessmentResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatorAssessmentResultDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StudentProgressDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/StudentProgressDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StudyStreakDto": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "days": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "StudyStreakDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/StudyStreakDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubmitAnswerDto": {
        "type": "object",
        "properties": {
          "questionId": {
            "type": "integer",
            "format": "int32"
          },
          "answer": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubmitAssessmentCommand": {
        "type": "object",
        "properties": {
          "assessmentId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubmitAnswerDto"
            },
            "nullable": true
          },
          "timeSpentMinutes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SuspendUserCommand": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "suspensionEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemAlertDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SystemConfigDto": {
        "type": "object",
        "properties": {
          "settings": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SystemConfigDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/SystemConfigDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemHealthDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "lastChecked": {
            "type": "string",
            "format": "date-time"
          },
          "healthChecks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HealthCheckDto"
            },
            "nullable": true
          },
          "metrics": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemHealthDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/SystemHealthDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemStatisticsDto": {
        "type": "object",
        "properties": {
          "users": {
            "$ref": "#/components/schemas/UserStatistics"
          },
          "content": {
            "$ref": "#/components/schemas/ContentStatistics"
          },
          "engagement": {
            "$ref": "#/components/schemas/EngagementStatistics"
          },
          "performance": {
            "$ref": "#/components/schemas/PerformanceStatistics"
          }
        },
        "additionalProperties": false
      },
      "SystemStatisticsDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/SystemStatisticsDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeSpan": {
        "type": "object",
        "properties": {
          "ticks": {
            "type": "integer",
            "format": "int64"
          },
          "days": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hours": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "milliseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "microseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "nanoseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "minutes": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "seconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalDays": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalHours": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMilliseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMicroseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalNanoseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMinutes": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalSeconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TimeSpentAnalyticsDto": {
        "type": "object",
        "properties": {
          "totalTimeSpent": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "averageSessionDuration": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "totalSessions": {
            "type": "integer",
            "format": "int32"
          },
          "dailyTimeSpent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DailyTimeSpentDto"
            },
            "nullable": true
          },
          "timeByContentType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentTypeTimeDto"
            },
            "nullable": true
          },
          "timeByCategoryDto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryTimeDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeSpentAnalyticsDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/TimeSpentAnalyticsDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TrackTimeSpentCommand": {
        "type": "object",
        "properties": {
          "contentId": {
            "type": "integer",
            "format": "int32"
          },
          "timeSpent": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "sessionStart": {
            "type": "string",
            "format": "date-time"
          },
          "sessionEnd": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UpdateAssessmentCommand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "instructions": {
            "type": "string",
            "nullable": true
          },
          "timeLimit": {
            "type": "integer",
            "format": "int32"
          },
          "maxAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "passingScore": {
            "type": "integer",
            "format": "int32"
          },
          "updatedBy": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateContentCommand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "videoUrl": {
            "type": "string",
            "nullable": true
          },
          "documentUrl": {
            "type": "string",
            "nullable": true
          },
          "textContent": {
            "type": "string",
            "nullable": true
          },
          "durationMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "isRequired": {
            "type": "boolean"
          },
          "updatedBy": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateContentProgressCommand": {
        "type": "object",
        "properties": {
          "contentId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "progressPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "timeSpentMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "isCompleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateFileCommand": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateLearningPathCommand": {
        "type": "object",
        "properties": {
          "learningPathId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isPublished": {
            "type": "boolean"
          },
          "contentIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateNotificationSettingsCommand": {
        "type": "object",
        "properties": {
          "emailNotifications": {
            "type": "boolean"
          },
          "pushNotifications": {
            "type": "boolean"
          },
          "smsNotifications": {
            "type": "boolean"
          },
          "notificationTypes": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateResourceCommand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "fileUrl": {
            "type": "string",
            "nullable": true
          },
          "templateContent": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateSystemConfigCommand": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserCommand": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateUserPreferencesCommand": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "emailNotifications": {
            "type": "boolean"
          },
          "pushNotifications": {
            "type": "boolean"
          },
          "preferences": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserProfileCommand": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "bio": {
            "type": "string",
            "nullable": true
          },
          "linkedInUrl": {
            "type": "string",
            "nullable": true
          },
          "gitHubUrl": {
            "type": "string",
            "nullable": true
          },
          "portfolioUrl": {
            "type": "string",
            "nullable": true
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "interests": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "certifications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserRoleCommand": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "newRole": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserActivityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "entityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserActivityDtoPagedResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserActivityDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UserActivityDtoPagedResultResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/UserActivityDtoPagedResult"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserActivityTrendDto": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "activeUsers": {
            "type": "integer",
            "format": "int32"
          },
          "totalSessions": {
            "type": "integer",
            "format": "int32"
          },
          "averageSessionDuration": {
            "$ref": "#/components/schemas/TimeSpan"
          }
        },
        "additionalProperties": false
      },
      "UserAnalyticsDto": {
        "type": "object",
        "properties": {
          "totalUsers": {
            "type": "integer",
            "format": "int32"
          },
          "activeUsers": {
            "type": "integer",
            "format": "int32"
          },
          "newUsers": {
            "type": "integer",
            "format": "int32"
          },
          "userGrowthRate": {
            "type": "number",
            "format": "double"
          },
          "registrationTrend": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRegistrationTrendDto"
            },
            "nullable": true
          },
          "activityTrend": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserActivityTrendDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserAnalyticsDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/UserAnalyticsDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastLoginAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserEngagementDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "totalSessions": {
            "type": "integer",
            "format": "int32"
          },
          "totalTimeSpent": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "completedPaths": {
            "type": "integer",
            "format": "int32"
          },
          "engagementScore": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "UserGrowthDto": {
        "type": "object",
        "properties": {
          "newUsers": {
            "type": "integer",
            "format": "int32"
          },
          "activeUsers": {
            "type": "integer",
            "format": "int32"
          },
          "retentionRate": {
            "type": "integer",
            "format": "int32"
          },
          "dailyGrowth": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DailyGrowthDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserLearningPathDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "progressPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "enrollmentDate": {
            "type": "string",
            "format": "date-time"
          },
          "completionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserRegistrationTrendDto": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "newUsers": {
            "type": "integer",
            "format": "int32"
          },
          "totalUsers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserSessionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "deviceInfo": {
            "type": "string",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "nullable": true
          },
          "loginTime": {
            "type": "string",
            "format": "date-time"
          },
          "logoutTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "location": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserStatistics": {
        "type": "object",
        "properties": {
          "totalUsers": {
            "type": "integer",
            "format": "int32"
          },
          "activeUsers": {
            "type": "integer",
            "format": "int32"
          },
          "newUsersToday": {
            "type": "integer",
            "format": "int32"
          },
          "newUsersThisWeek": {
            "type": "integer",
            "format": "int32"
          },
          "newUsersThisMonth": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserStatisticsDto": {
        "type": "object",
        "properties": {
          "totalLearningPaths": {
            "type": "integer",
            "format": "int32"
          },
          "completedLearningPaths": {
            "type": "integer",
            "format": "int32"
          },
          "totalAssessments": {
            "type": "integer",
            "format": "int32"
          },
          "passedAssessments": {
            "type": "integer",
            "format": "int32"
          },
          "averageScore": {
            "type": "number",
            "format": "double"
          },
          "totalTimeSpent": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "currentStreak": {
            "type": "integer",
            "format": "int32"
          },
          "loginCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UsersAnalyticsDto": {
        "type": "object",
        "properties": {
          "totalUsers": {
            "type": "integer",
            "format": "int32"
          },
          "activeUsers": {
            "type": "integer",
            "format": "int32"
          },
          "newUsersThisMonth": {
            "type": "integer",
            "format": "int32"
          },
          "userGrowthRate": {
            "type": "number",
            "format": "double"
          },
          "registrationTrend": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRegistrationTrendDto"
            },
            "nullable": true
          },
          "activityTrend": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserActivityTrendDto"
            },
            "nullable": true
          },
          "topEngagedUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserEngagementDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UsersAnalyticsDtoResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/UsersAnalyticsDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateResetTokenCommand": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerifyEmailCommand": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}